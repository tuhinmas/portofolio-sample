version: 2
jobs:
    deploy-staging:
        docker:
          # Specify the version you desire here
          - image: circleci/php:8.0.11-browsers
        resource_class: large
        steps:
          - run : 
              command: docker logout
          - add_ssh_keys:
                fingerprints:
                  - "69:6b:e7:27:a1:eb:0d:af:1a:f9:4b:c0:7f:61:d4:28"
          - checkout
          - run: sh notif_telegram.sh Staging $CIRCLE_USERNAME $CIRCLE_SHA1 $CIRCLE_TAG
          - run:
              name: Installing deployment dependencies
              working_directory: /
              command: |
                sudo apt-get -y -qq update
                sudo apt-get install python3-pip python3-dev build-essential
                sudo apt-get install libffi-dev
                sudo pip3 install awsebcli
          - run:
              name: Deploying
              command: eb deploy javamas-staging-v3 -v
    deploy-test-branch:
        docker:
          # Specify the version you desire here
          - image: circleci/php:8.0.11-browsers
        resource_class: large
        steps:
          - add_ssh_keys:
                fingerprints:
                  - "69:6b:e7:27:a1:eb:0d:af:1a:f9:4b:c0:7f:61:d4:28"
          - checkout
          - run: sh notif_telegram.sh Staging $CIRCLE_USERNAME $CIRCLE_SHA1 $CIRCLE_TAG
          # Download and cache dependencies
          - restore_cache:
              keys:
              - v1-dependencies-{{ checksum "composer.json" }}
              # fallback to using the latest cache if no exact match is found
              - v1-dependencies-
          - run: cat .env.staging
          - run: cp .env.staging .env
          - run: cat .env 
          - run: cp .env.testing.staging.example .env.testing
          - run: cat .env.testing

          - save_cache:
              paths:
                - ./vendor
              key: v1-dependencies-{{ checksum "composer.json" }}

          - run:
              name: Installing deployment dependencies
              working_directory: /
              command: |
                sudo apt-get -y -qq update
                sudo apt-get install python3-pip python3-dev build-essential
                sudo apt-get install libffi-dev
                sudo pip3 install awsebcli
          - run:
              name: Deploying
              command: eb deploy javamas-staging-82 -v
    deploy-prod:
        docker:
          # Specify the version you desire here
          - image: circleci/php:8.0.11-browsers
        resource_class: large
        steps:
          - add_ssh_keys:
                fingerprints:
                  - "69:6b:e7:27:a1:eb:0d:af:1a:f9:4b:c0:7f:61:d4:28"
          - checkout
          - save_cache:
              paths:
                - ./vendor
              key: v1-dependencies-{{ checksum "composer.json" }}

          - run:
              name: Installing deployment dependencies
              working_directory: /
              command: |
                sudo apt-get -y -qq update
                sudo apt-get install python3-pip python3-dev build-essential
                sudo apt-get install libffi-dev
                sudo pip3 install awsebcli

          - run:
              name: Deploying
              command: eb deploy javamas-production-v2 -v
    deploy-test:
        docker:
          # Specify the version you desire here
          - image: circleci/php:8.0.11-browsers
        resource_class: large
        steps:
          - add_ssh_keys:
                fingerprints:
                  - "69:6b:e7:27:a1:eb:0d:af:1a:f9:4b:c0:7f:61:d4:28"
          - checkout
          - run:
              name: Install PHP exts
              command: |
                sudo apt-get update -y && sudo apt-get install -y libpng-dev
                sudo docker-php-ext-install zip
                sudo docker-php-ext-install gd

          - run: sudo composer self-update

          # Download and cache dependencies
          - restore_cache:
              keys:
              - v1-dependencies-{{ checksum "composer.json" }}
              # fallback to using the latest cache if no exact match is found
              - v1-dependencies-
          - run: cp .env.staging .env
          - run: composer update --ignore-platform-reqs
          - run: cat composer.lock
          - run: composer install -n --prefer-dist --ignore-platform-reqs
          - run: php artisan config:cache 
          - run: php artisan key:generate
          - run: cat .env 

          - save_cache:
              paths:
                - ./vendor
              key: v1-dependencies-{{ checksum "composer.json" }}
          - run:
              name: Installing deployment dependencies
              working_directory: /
              command: |
                sudo apt-get -y -qq update
                sudo apt-get install python3-pip python3-dev build-essential
                sudo apt-get install libffi-dev
                sudo pip3 install awsebcli
workflows:
  version: 2
  build_and_deploy_staging:
   jobs:
    - deploy-staging:
          filters:
            branches:
              only: master
    - deploy-test-branch:
          filters:
            branches:
              only: test
    - deploy-test:
          filters:
            tags:
              only: /^test.*/
            branches:
              ignore: /.*/
    - hold:
          type: approval
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/
    - deploy-prod:
          requires:
            - hold
          filters:
            tags:
              only: /^v.*/
            branches:
              only: production
              # ignore: /.*/